// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "RestaurantType": Application Media Types
//
// Command:
// $ goagen
// --design=Restaurant/design
// --out=$(GOPATH)\src\Restaurant
// --version=v1.3.1

package app

import (
	"github.com/goadesign/goa"
)

// Restaurant Type (default view)
//
// Identifier: application/vnd.restauranttype+json; view=default
type Restauranttype struct {
	// Restaurant Type Id
	ID string `form:"id" json:"id" yaml:"id" xml:"id"`
	// Restaurant Type Name
	Name string `form:"name" json:"name" yaml:"name" xml:"name"`
}

// Validate validates the Restauranttype media type instance.
func (mt *Restauranttype) Validate() (err error) {
	if mt.ID == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "id"))
	}
	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	return
}

// RestauranttypeCollection is the media type for an array of Restauranttype (default view)
//
// Identifier: application/vnd.restauranttype+json; type=collection; view=default
type RestauranttypeCollection []*Restauranttype

// Validate validates the RestauranttypeCollection media type instance.
func (mt RestauranttypeCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}
