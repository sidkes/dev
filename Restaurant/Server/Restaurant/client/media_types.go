// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "RestaurantType": Application Media Types
//
// Command:
// $ goagen
// --design=Restaurant/design
// --out=$(GOPATH)\src\Restaurant
// --version=v1.3.1

package client

import (
	"github.com/goadesign/goa"
	"net/http"
)

// Restaurant Type (default view)
//
// Identifier: application/vnd.restauranttype+json; view=default
type Restauranttype struct {
	// Restaurant Type Id
	ID *string `form:"id,omitempty" json:"id,omitempty" yaml:"id,omitempty" xml:"id,omitempty"`
	// Restaurant Type Name
	Name string `form:"name" json:"name" yaml:"name" xml:"name"`
}

// Validate validates the Restauranttype media type instance.
func (mt *Restauranttype) Validate() (err error) {
	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	return
}

// DecodeRestauranttype decodes the Restauranttype instance encoded in resp body.
func (c *Client) DecodeRestauranttype(resp *http.Response) (*Restauranttype, error) {
	var decoded Restauranttype
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
